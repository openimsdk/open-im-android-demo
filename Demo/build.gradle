// Top-level build file where you can add configuration options common to all sub-projects/modules.


buildscript {
    ext {
        compose_version = '1.1.1'
        compose_compiler_version = '1.1.1'
        kotlin_version = '1.8.0'
        java_version = JavaVersion.VERSION_1_8
        dokka_version = '1.5.0'

        versions = [
            androidx_core     : "1.8.0",
            androidx_lifecycle: "2.5.1",
            autoService       : '1.0.1',
            dagger            : "2.43",
            groupie           : "2.9.0",
            junit             : "4.13.2",
            junitJupiter      : "5.5.0",
            coroutines        : "1.6.0",
            lint              : "30.0.1",
            protobuf          : "3.22.0",
            android_sdk       : "3.8.3.1",
            android_sdk_core  : "3.8.3-patch3",
        ]
        generated = [
            protoSrc: "$projectDir/protocol",
        ]
        deps = [
            auto              : [
                'service'           : "com.google.auto.service:auto-service:${versions.autoService}",
                'serviceAnnotations': "com.google.auto.service:auto-service-annotations:${versions.autoService}",
            ],
            coroutines        : [
                "lib" : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}",
//                "test": "org.jetbrains.kotlinx:kotlinx-coroutines-test: ${versions.coroutines}",
            ],
            timber            : "com.github.ajalt:timberkt:1.5.1",
            // lint
            lint              : "com.android.tools.lint:lint:${versions.lint}",
            lintApi           : "com.android.tools.lint:lint-api:${versions.lint}",
            lintChecks        : "com.android.tools.lint:lint-checks:${versions.lint}",
            lintTests         : "com.android.tools.lint:lint-tests:${versions.lint}",

            // tests
            junit             : "junit:junit:${versions.junit}",
            junitJupiterApi   : "org.junit.jupiter:junit-jupiter-api:${versions.junitJupiter}",
            junitJupiterEngine: "org.junit.jupiter:junit-jupiter-engine:${versions.junitJupiter}",
        ]
        annotations = [
        ]
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
        classpath "io.realm:realm-gradle-plugin:10.11.1"
        classpath 'com.huawei.agconnect:agcp:1.6.0.300'
        // r8 version
        classpath 'com.android.tools:r8:8.2.16-dev'
    }
}

plugins {
    //id 'com.android.application' version '7.1.3' apply false
    //id 'com.android.library' version '7.1.3' apply false
    id 'com.android.application' version '7.4.2' apply false
    id 'com.android.library' version '7.4.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.8.20' apply false
    id 'com.google.gms.google-services' version "4.4.2" apply false
}
apply from: "config.gradle"

task clean(type: Delete) {
    delete rootProject.buildDir
}
